/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-11-05T14:51:45.478495+08:00[Asia/Manila]")
@Validated
@Api(value = "exchangeRateResponse", description = "the exchangeRateResponse API")
public interface ExchangeRateResponseApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /exchangeRateResponse : Your GET endpoint
     * Get the response
     *
     * @param resourceId universally unique identifier (optional)
     * @return OK (status code 200)
     *         or Not Found (status code 404)
     */
    @ApiOperation(value = "Your GET endpoint", nickname = "getExchangeRateResponse", notes = "Get the response", response = Object.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = Object.class),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/exchangeRateResponse",
        produces = { "application/json" }
    )
    default ResponseEntity<Object> getExchangeRateResponse(@ApiParam(value = "universally unique identifier") @Valid @RequestParam(value = "resourceId", required = false) String resourceId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import java.math.BigDecimal;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-11-05T14:54:53.857083+08:00[Asia/Manila]")
@Validated
@Api(value = "exchangeRate", description = "the exchangeRate API")
public interface ExchangeRateApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /exchangeRate : Get User Info by User ID
     * Retrieve latest or historical currency exchnage rates.
     *
     * @param base Changing base currency. Enter the three-letter currency code of your preferred base currency. (optional)
     * @param symbols Enter a list of comma-separated currency codes to limit output currencies. (optional)
     * @param date Query historical rates for a given date (optional)
     * @param amount The amount to be converted. (optional)
     * @param places Round numbers to decimal place. (optional)
     * @return Request Accepted (status code 202)
     *         or Request Not Found (status code 404)
     */
    @ApiOperation(value = "Get User Info by User ID", nickname = "getCurExRateId", notes = "Retrieve latest or historical currency exchnage rates.", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 202, message = "Request Accepted"),
        @ApiResponse(code = 404, message = "Request Not Found") })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/exchangeRate"
    )
    default ResponseEntity<Void> getCurExRateId(@ApiParam(value = "Changing base currency. Enter the three-letter currency code of your preferred base currency.") @Valid @RequestParam(value = "base", required = false) String base,@ApiParam(value = "Enter a list of comma-separated currency codes to limit output currencies.") @Valid @RequestParam(value = "symbols", required = false) String symbols,@ApiParam(value = "Query historical rates for a given date") @Valid @RequestParam(value = "date", required = false) String date,@ApiParam(value = "The amount to be converted.") @Valid @RequestParam(value = "amount", required = false) BigDecimal amount,@ApiParam(value = "Round numbers to decimal place.") @Valid @RequestParam(value = "places", required = false) Integer places) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
